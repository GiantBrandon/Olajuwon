{"version":3,"sources":["theme/themeContext.tsx","Color.tsx","HexagonButtons.tsx","styles.tsx","Expansion.tsx","Popup.tsx","Login/PassWordEntryNode.tsx","Login/PasswordEntry.tsx","Login/Login.tsx","App.tsx","index.tsx"],"names":["ThemeContext","React","createContext","theme","setTheme","colors","BG","contrast","parallel","highlight","shift","color","R","G","B","newR","parseInt","slice","newG","newB","toString","HexagonButtonWrapper","styled","button","props","height","width","backgroundColor","borderWidth","margin","padding","outline","HexagonBack","div","hover","borderRadius","border","transform","HexagonMid","marginTop","HexagonFront","HexagonTextContainer","display","flexDirection","justifyContent","fontSize","textAlign","HexagonText","p","HexagonRedirect","useState","setHover","useContext","to","path","className","onMouseEnter","onMouseLeave","label","CenteredDiv","position","top","left","spacing","ExpandWrapper","hexWidth","hexHeight","ExpandButton","onClick","GithubButton","LinkedInButton","right","LoginButton","ComingButton1","bottom","ComingButton2","ComingButton3","Expansion","expanded","setExpanded","PopupWrapper","Popup","children","Node","marginBottom","marginRight","checked","PasswordEntryNode","drawing","isActive","activate","isHovered","setIsHovered","useEffect","onMouseOver","Trace","svg","NodeGrid","paddingTop","paddingLeft","NodeRow","zIndex","PasswordEntry","selected","setSelected","setDrawing","onMouseDown","onMouseUp","lines","i","length","push","key","x1","x","y1","y","x2","y2","stroke","strokeWidth","renderLines","Array","fill","map","_","row","column","filter","coordinate","Login","alert","App","Provider","value","Helmet","component","window","location","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6714084a.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react'\n\ntype ThemeContextModel = {\n    theme: string,\n    setTheme: Dispatch<SetStateAction<string>>\n}\n\nexport const ThemeContext = React.createContext<ThemeContextModel>({theme: 'dark', setTheme: () => {}});\n\n","export type Theme = {\n    BG: string,\n    contrast: string,\n    parallel: string,\n    highlight: string,\n}\n\nexport const colors: Record<string, Theme> = {\n    'dark': {\n    BG: '#262626',\n    contrast: '#f5f5f5',\n    parallel: '#3f3f3f',\n    highlight: '#dcdcdc',\n    },\n    'light': {\n        BG: '#FFF',\n        contrast: '#111',\n        parallel: '#BBF',\n        highlight: '#3f3f3f',\n    } \n}\n\nexport const shift = (color: string, R: number, G: number, B: number): string => {\n    const newR: number = parseInt(`0x${color.slice(1, 3)}`) + R\n    const newG: number = parseInt(`0x${color.slice(3, 5)}`) + G\n    const newB: number = parseInt(`0x${color.slice(5, 7)}`) + B\n    return `#${newR.toString(16)}${newG.toString(16)}${newB.toString(16)}`\n}","import React, { useContext, useState } from 'react';\nimport styled from '@emotion/styled'\nimport { ThemeContext } from './theme/themeContext';\nimport { colors, shift, Theme } from './Color';\nimport { Link } from 'react-router-dom'\n\ntype HexagonProps = {\n  theme: Theme\n  width: number\n  hover: boolean\n}\n\nconst HexagonButtonWrapper = styled.button((props: HexagonProps) => ({\n  height: props.width * 1.16,\n  width: props.width,\n  backgroundColor: 'transparent',\n  borderWidth: 0,\n  margin: 0,\n  padding: 0,\n  outline: 0,\n}))\n\nconst HexagonBack = styled.div((props: HexagonProps) => ({\n  height: props.width * 1.16 / 2,\n  width: props.width,\n  backgroundColor: props.hover ? props.theme.highlight : shift(props.theme.highlight, 10, 10, 10),\n  borderRadius: '1px',\n  border: 0,\n  transform: 'rotate(-60deg)',\n}))\n\nconst HexagonMid = styled.div((props: HexagonProps) => ({\n  height: props.width * 1.16 / 2,\n  width: props.width,\n  marginTop: -(props.width * 1.16 / 2),\n  backgroundColor: props.hover ? shift(props.theme.highlight, -10, -10, -10) : props.theme.highlight,\n  borderRadius: '1px',\n  border: 0,\n  transform: 'rotate(0deg)',\n}))\n\nconst HexagonFront = styled.div((props: HexagonProps) => ({\n  height: props.width * 1.16 / 2,\n  width: props.width,\n  marginTop: -(props.width * 1.16 / 2),\n  backgroundColor: props.hover ? shift(props.theme.highlight, -20, -20, -20) : shift(props.theme.highlight, -10, -10, -10),\n  borderRadius: '1px',\n  border: 0,\n  transform: 'rotate(60deg)',\n}))\n\nconst HexagonTextContainer = styled.div((props: HexagonProps) => ({\n  height: props.width * 1.16 / 2,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  fontSize: props.width / 5,\n  marginTop: -(props.width * 1.16) / 2,\n  textAlign: 'center',\n  color: props.hover ? props.theme.BG : props.theme.BG,\n  transform: 'rotate(0deg)',\n}))\n\nconst HexagonText = styled.p(() => ({\n  margin: 0\n}))\n\ninterface HexagonRedirectProps {\n  width?: number\n  path: string\n  label: string\n  className?: string\n}\n\nexport const HexagonRedirect: React.FC<HexagonRedirectProps> = ({width=100, ...props}) => {\n  const [hover, setHover] = useState(false)\n\n  const theme: string = useContext(ThemeContext).theme\n  return (\n    <Link to={props.path} className={props.className} >\n      <HexagonButtonWrapper onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} theme={colors[theme]} width={width} hover={hover}>\n        <HexagonBack theme={colors[theme]} width={width} hover={hover}/>\n        <HexagonMid theme={colors[theme]} width={width} hover={hover} />\n        <HexagonFront theme={colors[theme]} width={width} hover={hover} />\n        <HexagonTextContainer theme={colors[theme]} width={width} hover={hover}><HexagonText>{props.label}</HexagonText></HexagonTextContainer>\n      </HexagonButtonWrapper>\n    </Link>\n  );\n};\n\ninterface HexagonButtonProps {\n  width?: number\n  onClick: () => void\n  label: string\n  className?: string\n}\n\nexport const HexagonButton: React.FC<HexagonButtonProps> = ({width=100, ...props}) => {\n  const [hover, setHover] = useState(false)\n\n  const theme: string = useContext(ThemeContext).theme\n  return (\n      <HexagonButtonWrapper className={props.className} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} onClick={props.onClick} theme={colors[theme]} width={width} hover={hover}>\n        <HexagonBack theme={colors[theme]} width={width} hover={hover}/>\n        <HexagonMid theme={colors[theme]} width={width} hover={hover} />\n        <HexagonFront theme={colors[theme]} width={width} hover={hover} />\n        <HexagonTextContainer theme={colors[theme]} width={width} hover={hover}><HexagonText>{props.label}</HexagonText></HexagonTextContainer>\n      </HexagonButtonWrapper>\n  );\n};\n","import styled from '@emotion/styled'\n\nexport const CenteredDiv = styled.div({\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n})\n\nexport const spacing = {\n    smallest: 6,\n    smaller: 12,\n    medium: 24,\n    large: 36,\n    larger: 48,\n    largest: 60\n}","import styled from '@emotion/styled'\nimport React, { useState } from 'react'\nimport { HexagonButton, HexagonRedirect } from './HexagonButtons'\nimport { CenteredDiv, spacing } from './styles'\n\ntype ExpansionStyleProps = {\n    hexWidth: number\n    hexHeight: number\n}\n\nconst ExpandWrapper = styled(CenteredDiv)((props: ExpansionStyleProps) => ({\n    width: props.hexWidth * 3 + spacing.smaller * 2,\n    height: props.hexHeight * 2.5 + spacing.smaller * 2\n}))\n\nconst ExpandButton = styled(HexagonButton)((props: ExpansionStyleProps) => ({\n    position: 'absolute',\n    top: props.hexHeight * .75 + spacing.smaller,\n    left: props.hexWidth + spacing.smaller\n}))\n\nconst GithubButton = styled(HexagonRedirect)((props: ExpansionStyleProps) => ({\n    position: 'absolute',\n    top: 0,\n    left: props.hexWidth / 2 + spacing.smallest\n}))\n\nconst LinkedInButton = styled(HexagonRedirect)((props: ExpansionStyleProps) => ({\n    position: 'absolute',\n    top: 0,\n    right: props.hexWidth / 2 + spacing.smallest\n}))\n\nconst LoginButton = styled(HexagonRedirect)((props: ExpansionStyleProps) => ({\n    position: 'absolute',\n    top: props.hexHeight * .75 + 10,\n    right: 0\n}))\n\nconst ComingButton1 = styled(HexagonRedirect)((props: ExpansionStyleProps) => ({\n    position: 'absolute',\n    bottom: 0,\n    right: 100/ 2 + spacing.smallest\n}))\n\nconst ComingButton2 = styled(HexagonRedirect)((props: ExpansionStyleProps) => ({\n    position: 'absolute',\n    bottom: 0,\n    left: 100/ 2 + spacing.smallest\n}))\n\nconst ComingButton3 = styled(HexagonRedirect)((props: ExpansionStyleProps) => ({\n    position: 'absolute',\n    top: props.hexHeight * .75 + spacing.smaller,\n    left: 0\n}))\n\ninterface ExpansionProps {\n    hexHeight?: number\n    hexWidth?: number\n}\n\nexport const Expansion: React.FC<ExpansionProps> = ({hexWidth = 100, hexHeight = hexWidth * 1.16}) => {\n    const [expanded, setExpanded] = useState(false)\n    return (\n    <ExpandWrapper hexWidth={hexWidth} hexHeight={hexHeight}>\n    <ExpandButton label={'Get Started'} onClick={() => setExpanded(!expanded)} hexWidth={hexWidth} hexHeight={hexHeight} />\n    {expanded && \n    <>\n    <GithubButton label={'GitHub'} path={'/Github'} hexWidth={hexWidth} hexHeight={hexHeight} />\n    <LinkedInButton label={'LinkedIn'} path={'/LinkedIn'} hexWidth={hexWidth} hexHeight={hexHeight} />\n    <LoginButton label={'Login'} path={'/Login'} hexWidth={hexWidth} hexHeight={hexHeight} />\n    <ComingButton1 label={'Coming Soon'} path={'/ComingSoon'} hexWidth={hexWidth} hexHeight={hexHeight} />\n    <ComingButton2 label={'Coming Soon'} path={'/ComingSoon'} hexWidth={hexWidth} hexHeight={hexHeight} />\n    <ComingButton3 label={'Coming Soon'} path={'/ComingSoon'} hexWidth={hexWidth} hexHeight={hexHeight} />\n    </>\n    }\n    </ExpandWrapper>\n    )\n\n}","import styled from '@emotion/styled'\nimport React, { useContext } from 'react'\nimport { colors, Theme } from './Color'\nimport { CenteredDiv, spacing } from './styles'\nimport { ThemeContext } from './theme/themeContext'\n\ninterface PopupWrapperProps {\n  theme: Theme\n}\n\nconst PopupWrapper = styled(CenteredDiv)((props: PopupWrapperProps) => ({\n    display: 'inline-block',\n    padding: spacing.medium,\n    backgroundColor: props.theme.parallel\n}))\n\nexport const Popup: React.FC = (props) => {\n    const theme: string = useContext(ThemeContext).theme\n    return (\n        <PopupWrapper theme={colors[theme]}>\n            {props.children}\n        </PopupWrapper>\n    )\n}","import styled from '@emotion/styled'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { colors, Theme } from '../Color'\nimport { spacing } from '../styles'\nimport { ThemeContext } from '../theme/themeContext'\n\ntype NodeProps = {\n    checked: boolean\n    theme: Theme\n}\n\nconst Node = styled.div((props: NodeProps) => ({\n    width: spacing.medium,\n    height: spacing.medium,\n    marginBottom: spacing.smaller,\n    marginRight: spacing.smaller,\n    borderRadius: spacing.medium,\n    backgroundColor: props.checked ? props.theme.contrast : props.theme.parallel,\n    border: `1px solid ${props.theme.contrast}`\n}))\n\ntype PasswordEntryNodeProps = {\n    drawing: boolean\n    isActive: boolean\n    activate: () => void\n}\n\nexport const PasswordEntryNode: React.FC<PasswordEntryNodeProps> = ({drawing, isActive, activate}) => {\n    const [isHovered, setIsHovered] = useState(false)\n    const theme = useContext(ThemeContext).theme\n\n    const handleActivate = () => {\n        drawing && !isActive && activate()\n    }\n    \n    useEffect(() => {\n        isHovered && handleActivate()\n    })\n\n    return (\n        <Node checked={isActive} theme={colors[theme]} onMouseOver={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)} />\n    )\n}","import styled from '@emotion/styled'\nimport React, { ReactNode, useContext, useState } from 'react'\nimport { colors, Theme } from '../Color'\nimport { spacing } from '../styles'\nimport { ThemeContext } from '../theme/themeContext'\nimport { PasswordEntryNode } from './PassWordEntryNode'\n\nconst Trace = styled.svg({\n    position: 'absolute'\n})\n\nconst NodeGrid = styled.div((props: {theme: Theme}) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: spacing.smaller,\n    paddingLeft: spacing.smaller,\n    border: `1px solid ${props.theme.contrast}`\n}))\n\nconst NodeRow = styled.div({\n    display: 'inline-flex',\n    zIndex: 1\n})\n\ntype PasswordEntryProps = {\n\n}\n\ntype Coordinate = {\n    x: number\n    y: number\n}\n\nexport const PasswordEntry: React.FC<PasswordEntryProps> = (props) => {\n    const [selected, setSelected] = useState<Coordinate[]>([])\n    const [drawing, setDrawing] = useState(false)\n    const theme = useContext(ThemeContext).theme\n\n    const renderLines = () => {\n        const lines: ReactNode[] = []\n        for ( let i = 0; i < selected.length - 1; i++) {\n            lines.push(<line key={i} x1={selected[i].x * 38 + 13} y1={selected[i].y * 38 + 13} x2={selected[i + 1].x * 38 + 13} y2={selected[i + 1].y * 38 + 13} stroke={colors[theme].contrast} strokeWidth=\"2\" />)\n        }\n        return (\n            <Trace height=\"148\" width=\"148\">\n            {lines}\n          </Trace>\n        )\n    }\n\n    return (\n        <NodeGrid theme={colors[theme]} onMouseDown={() => {setDrawing(true); setSelected([])}} onMouseUp={() => setDrawing(false)} onMouseLeave={() => setDrawing(false)}>\n        {renderLines()}\n        {Array(4).fill(0).map((_, row) => \n        <NodeRow>\n            {Array(4).fill(0).map((_, column) => <PasswordEntryNode drawing={drawing} isActive={selected.filter(coordinate => coordinate.x === column && coordinate.y === row).length > 0} activate={() => setSelected([...selected, {x: column, y: row}])} /> )}\n        </NodeRow>\n        )}\n        </NodeGrid>\n    )\n}","import React from 'react'\nimport { getUsers } from '../Api/Router'\nimport { Popup } from '../Popup'\nimport { PasswordEntry } from './PasswordEntry'\n\nexport const Login: React.FC = (props) => {\n    return (\n      <>\n        <Popup>\n          <p>\n            Username:\n          </p>\n          <input />\n          <p>\n            Password:\n          </p>\n          <PasswordEntry />\n          <button onClick={() => alert('ya, so this doesn\\'t do anything yet')}>\n            Submit\n          </button>\n          </Popup>\n          </>\n    )\n}","import { useState } from \"react\"\nimport { ThemeContext } from \"./theme/themeContext\"\nimport React from 'react'\nimport { colors } from \"./Color\"\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport { Expansion } from \"./Expansion\"\nimport { Link } from 'react-router-dom'\nimport { Login } from \"./Login/Login\"\n\nexport const App: React.FC = () => {\n    const [theme, setTheme] = useState('dark')\n\n    return (\n        <BrowserRouter>\n        <ThemeContext.Provider value={{theme, setTheme}}>\n            <div className='application'> \n            <Helmet>\n                <style>{`body { background-color: ${colors[theme].BG};}`}</style>\n            </Helmet>\n            </div>\n            <Link to='/Home'>Return Home</Link>\n        <Switch>\n            <Route path='/Home'>\n            <Expansion />\n            </Route>\n        <Route path='/Github' component={() => {\n            window.location.replace('https://github.com/GiantBrandon')\n            return null;\n        }}/>\n        <Route path='/LinkedIn' component={() => {\n            window.location.replace('https://www.linkedin.com/in/brandon-kurtz-377251111/');\n            return null;\n        }}/>\n            <Route path='/Login'>\n                <Login />\n            </Route>\n            <Route path='/test'>\n                TEST\n            </Route>\n        </Switch>\n        </ThemeContext.Provider>\n        </BrowserRouter>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}